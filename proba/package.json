{
  "name": "proba",
  "displayName": "Proba",
  "description": "Proba...",
  "author": "Qpx",
  "license": "MIT",
  "version": "0.0.1",
  "publisher": "qpx",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-extension-samples"
  },
  "keywords": [
    "multi-root ready",
    "typescript",
    "julia",
    "python",
    "theme"
  ],
  "engines": {
    "vscode": "^1.45.0"
  },
  "categories": [
    "Programming Languages",
    "Themes",
    "Other"
  ],
  "activationEvents": [
    "*",
    "onLanguage:python",
    "workspaceContains:**/pyrightconfig.json",
    "onLanguage:semanticLanguage",
    "onCommand:extension.proba",
    "onLanguage:plaintext",
    "onLanguage:html1",
    "onLanguage:markdown",
    "onCommand:markdown.preview.toggleLock",
    "onCommand:markdown.preview.refresh",
    "onCommand:markdown.showPreview",
    "onCommand:markdown.showPreviewToSide",
    "onCommand:markdown.showLockedPreviewToSide",
    "onCommand:markdown.showSource",
    "onCommand:markdown.showPreviewSecuritySelector",
    "onCommand:markdown.api.render",
    "onWebviewPanel:markdown.preview",
    "onCustomEditor:vscode.markdown.preview.editor"
  ],
  "icon": "images/pyright-icon.png",
  "main": "./out/client/extension",
  "enableProposedApi": true,
  "contributes": {
    "themes": [
      {
        "label": "Proba Light",
        "uiTheme": "vs",
        "path": "./Proba_Light.tmTheme"
      },
      {
        "label": "Proba Dark",
        "uiTheme": "vs-dark",
        "path": "./Proba_Dark.tmTheme"
      },
      {
        "label": "One Dark Pro",
        "uiTheme": "vs-dark",
        "path": "./themes/OneDark-Pro.json"
      },
      {
        "label": "Monokai",
        "uiTheme": "vs-dark",
        "path": "./themes/monokai-color-theme.json"
      }
    ],
    "languages": [
      {
        "id": "html",
        "extensions": [
          ".html",
          ".htm",
          ".shtml",
          ".xhtml",
          ".mdoc",
          ".jsp",
          ".asp",
          ".aspx",
          ".jshtm",
          ".volt",
          ".ejs",
          ".rhtml"
        ],
        "aliases": [
          "HTML",
          "htm",
          "html",
          "xhtml"
        ],
        "mimetypes": [
          "text/html",
          "text/x-jshtm",
          "text/template",
          "text/ng-template",
          "application/xhtml+xml"
        ],
        "configuration": "./html-configuration.json"
      },
      {
        "id": "css",
        "aliases": [
          "CSS",
          "css"
        ],
        "extensions": [
          ".css"
        ],
        "mimetypes": [
          "text/css"
        ],
        "configuration": "./css-configuration.json"
      },
      {
        "id": "json",
        "aliases": [
          "JSON",
          "json"
        ],
        "extensions": [
          ".json",
          ".bowerrc",
          ".jscsrc",
          ".webmanifest",
          ".js.map",
          ".css.map",
          ".har",
          ".jslintrc",
          ".jsonld"
        ],
        "filenames": [
          "composer.lock",
          ".watchmanconfig",
          ".ember-cli"
        ],
        "mimetypes": [
          "application/json",
          "application/manifest+json"
        ],
        "configuration": "./json-configuration.json"
      },
      {
        "id": "jsonc",
        "aliases": [
          "JSON with Comments"
        ],
        "extensions": [
          ".hintrc",
          ".babelrc",
          ".jsonc",
          ".eslintrc",
          ".eslintrc.json",
          ".jsfmtrc",
          ".jshintrc",
          ".swcrc"
        ],
        "configuration": "./json-configuration.json"
      },
      {
        "id": "javascript",
        "extensions": [
          ".js"
        ],
        "aliases": [
          "js",
          "JavaScript"
        ],
        "configuration": "./js-configuration.json"
      },
      {
        "id": "python",
        "aliases": [
          "Python"
        ],
        "extensions": [
          ".py",
          ".pyi"
        ]
      },
      {
        "id": "markdown",
        "aliases": [
          "Markdown",
          "markdown"
        ],
        "extensions": [
          ".md",
          ".mkd",
          ".mdwn",
          ".mdown",
          ".markdown",
          ".markdn",
          ".mdtxt",
          ".mdtext",
          ".workbook"
        ],
        "configuration": "./md-configuration.json"
      },
      {
        "id": "semanticLanguage",
        "extensions": [
          ".semanticLanguage"
        ]
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "markdown.showPreviewToSide",
          "when": "editorLangId == markdown",
          "alt": "markdown.showPreview",
          "group": "navigation"
        },
        {
          "command": "markdown.showSource",
          "when": "markdownPreviewFocus",
          "group": "navigation"
        },
        {
          "command": "markdown.preview.refresh",
          "when": "markdownPreviewFocus",
          "group": "1_markdown"
        },
        {
          "command": "markdown.preview.toggleLock",
          "when": "markdownPreviewFocus",
          "group": "1_markdown"
        },
        {
          "command": "markdown.showPreviewSecuritySelector",
          "when": "markdownPreviewFocus",
          "group": "1_markdown"
        }
      ],
      "editor/context": [
        {
          "command": "pyright.organizeimports",
          "title": "Pyright: Organize Imports",
          "group": "Pyright",
          "when": "editorLangId == python"
        }
      ],
      "explorer/context": [
        {
          "command": "markdown.showPreview",
          "when": "resourceLangId == markdown",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "markdown.showPreview",
          "when": "resourceLangId == markdown",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "markdown.showPreview",
          "when": "editorLangId == markdown",
          "group": "navigation"
        },
        {
          "command": "markdown.showPreviewToSide",
          "when": "editorLangId == markdown",
          "group": "navigation"
        },
        {
          "command": "markdown.showLockedPreviewToSide",
          "when": "editorLangId == markdown",
          "group": "navigation"
        },
        {
          "command": "markdown.showSource",
          "when": "markdownPreviewFocus",
          "group": "navigation"
        },
        {
          "command": "markdown.showPreviewSecuritySelector",
          "when": "editorLangId == markdown"
        },
        {
          "command": "markdown.showPreviewSecuritySelector",
          "when": "markdownPreviewFocus"
        },
        {
          "command": "markdown.preview.toggleLock",
          "when": "markdownPreviewFocus"
        },
        {
          "command": "markdown.preview.refresh",
          "when": "editorLangId == markdown"
        },
        {
          "command": "markdown.preview.refresh",
          "when": "markdownPreviewFocus"
        }
      ]
    },
    "keybindings": [
      {
        "command": "markdown.showPreview",
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "when": "editorLangId == markdown"
      },
      {
        "command": "markdown.showPreviewToSide",
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "when": "editorLangId == markdown"
      }
    ],
    "grammars": [
      {
        "scopeName": "text.html.basic",
        "path": "./syntaxes/html.tmLanguage.json",
        "embeddedLanguages": {
          "text.html": "html",
          "source.css": "css",
          "source.js": "javascript",
          "source.python": "python",
          "source.smarty": "smarty"
        },
        "tokenTypes": {
          "meta.tag string.quoted": "other"
        }
      },
      {
        "language": "html",
        "scopeName": "text.html.derivative",
        "path": "./syntaxes/html-derivative.tmLanguage.json",
        "embeddedLanguages": {
          "text.html": "html",
          "source.css": "css",
          "source.js": "javascript",
          "source.python": "python",
          "source.smarty": "smarty"
        },
        "tokenTypes": {
          "meta.tag string.quoted": "other"
        }
      },
      {
        "language": "css",
        "scopeName": "source.css",
        "path": "./syntaxes/css.tmLanguage.json",
        "tokenTypes": {
          "meta.function.url string.quoted": "other"
        }
      },
      {
        "language": "json",
        "scopeName": "source.json",
        "path": "./syntaxes/JSON.tmLanguage.json"
      },
      {
        "language": "jsonc",
        "scopeName": "source.json.comments",
        "path": "./syntaxes/JSONC.tmLanguage.json"
      },
      {
        "language": "markdown",
        "scopeName": "text.html.markdown",
        "path": "./syntaxes/markdown.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.html": "html",
          "source.js": "javascript",
          "source.css": "css",
          "meta.embedded.block.frontmatter": "yaml",
          "meta.embedded.block.css": "css",
          "meta.embedded.block.ini": "ini",
          "meta.embedded.block.makefile": "makefile",
          "meta.embedded.block.sql": "sql",
          "meta.embedded.block.xml": "xml",
          "meta.embedded.block.xsl": "xsl",
          "meta.embedded.block.yaml": "yaml",
          "meta.embedded.block.c": "c",
          "meta.embedded.block.cpp": "cpp",
          "meta.embedded.block.diff": "diff",
          "meta.embedded.block.javascript": "javascript",
          "meta.embedded.block.json": "json",
          "meta.embedded.block.less": "less",
          "meta.embedded.block.scss": "scss",
          "meta.embedded.block.python": "python",
          "meta.embedded.block.shellscript": "shellscript",
          "meta.embedded.block.typescript": "typescript",
          "meta.embedded.block.typescriptreact": "typescriptreact"
        }
      }
    ],
    "commands": [
      {
        "command": "extension.proba",
        "title": "Proba :-)"
      },
      {
        "command": "proba.organizeimports",
        "title": "Organize Imports",
        "category": "Proba"
      },
      {
        "command": "proba.restartserver",
        "title": "Restart Server",
        "category": "Proba"
      },
      {
        "title": "Enable CodeLens",
        "command": "proba.enableCodeLens",
        "category": "Proba"
      },
      {
        "title": "Disable Codelens",
        "command": "proba.disableCodeLens",
        "category": "Proba"
      },
      {
        "command": "markdown.showPreview",
        "title": "%markdown.preview.title%",
        "category": "Markdown",
        "icon": {
          "light": "./media/preview-light.svg",
          "dark": "./media/preview-dark.svg"
        }
      },
      {
        "command": "markdown.showPreviewToSide",
        "title": "%markdown.previewSide.title%",
        "category": "Markdown",
        "icon": {
          "light": "./media/preview-right-light.svg",
          "dark": "./media/preview-right-dark.svg"
        }
      },
      {
        "command": "markdown.showLockedPreviewToSide",
        "title": "%markdown.showLockedPreviewToSide.title%",
        "category": "Markdown",
        "icon": {
          "light": "./media/preview-right-light.svg",
          "dark": "./media/preview-right-dark.svg"
        }
      },
      {
        "command": "markdown.showSource",
        "title": "%markdown.showSource.title%",
        "category": "Markdown",
        "icon": {
          "light": "./media/view-source-light.svg",
          "dark": "./media/view-source-dark.svg"
        }
      },
      {
        "command": "markdown.showPreviewSecuritySelector",
        "title": "%markdown.showPreviewSecuritySelector.title%",
        "category": "Markdown"
      },
      {
        "command": "markdown.preview.refresh",
        "title": "%markdown.preview.refresh.title%",
        "category": "Markdown"
      },
      {
        "command": "markdown.preview.toggleLock",
        "title": "%markdown.preview.toggleLock.title%",
        "category": "Markdown"
      }
    ],
    "snippets": [
      {
        "language": "markdown",
        "path": "./snippets/md.json"
      }
    ],
    "markdown.previewStyles": [
      "./styles/base.css",
      "./styles/markdown.css",
      "./styles/atom-one-dark.css",
      "./media/markdown.css",
      "./media/highlight.css"
    ],
    "configuration": {
      "type": "object",
      "title": "Proba",
      "order": 20,
      "properties": {
        "markdown.styles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "%markdown.styles.dec%",
          "scope": "resource"
        },
        "markdown.preview.breaks": {
          "type": "boolean",
          "default": false,
          "description": "%markdown.preview.breaks.desc%",
          "scope": "resource"
        },
        "markdown.preview.linkify": {
          "type": "boolean",
          "default": true,
          "description": "%markdown.preview.linkify%",
          "scope": "resource"
        },
        "markdown.preview.fontFamily": {
          "type": "string",
          "default": "system-ui, -apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'Ubuntu', 'Droid Sans', sans-serif",
          "description": "%markdown.preview.fontFamily.desc%",
          "scope": "resource"
        },
        "markdown.preview.fontSize": {
          "type": "number",
          "default": 14,
          "description": "%markdown.preview.fontSize.desc%",
          "scope": "resource"
        },
        "markdown.preview.lineHeight": {
          "type": "number",
          "default": 1.6,
          "description": "%markdown.preview.lineHeight.desc%",
          "scope": "resource"
        },
        "markdown.preview.scrollPreviewWithEditor": {
          "type": "boolean",
          "default": true,
          "description": "%markdown.preview.scrollPreviewWithEditor.desc%",
          "scope": "resource"
        },
        "markdown.preview.markEditorSelection": {
          "type": "boolean",
          "default": true,
          "description": "%markdown.preview.markEditorSelection.desc%",
          "scope": "resource"
        },
        "markdown.preview.scrollEditorWithPreview": {
          "type": "boolean",
          "default": true,
          "description": "%markdown.preview.scrollEditorWithPreview.desc%",
          "scope": "resource"
        },
        "markdown.preview.doubleClickToSwitchToEditor": {
          "type": "boolean",
          "default": true,
          "description": "%markdown.preview.doubleClickToSwitchToEditor.desc%",
          "scope": "resource"
        },
        "markdown.preview.openMarkdownLinks": {
          "type": "string",
          "default": "inPreview",
          "description": "%configuration.markdown.preview.openMarkdownLinks.description%",
          "scope": "resource",
          "enum": [
            "inPreview",
            "inEditor"
          ],
          "enumDescriptions": [
            "%configuration.markdown.preview.openMarkdownLinks.inPreview%",
            "%configuration.markdown.preview.openMarkdownLinks.inEditor%"
          ]
        },
        "markdown.links.openLocation": {
          "type": "string",
          "default": "currentGroup",
          "description": "%configuration.markdown.links.openLocation.description%",
          "scope": "resource",
          "enum": [
            "currentGroup",
            "beside"
          ],
          "enumDescriptions": [
            "%configuration.markdown.links.openLocation.currentGroup%",
            "%configuration.markdown.links.openLocation.beside%"
          ]
        },
        "markdown.trace": {
          "type": "string",
          "enum": [
            "off",
            "verbose"
          ],
          "default": "off",
          "description": "%markdown.trace.desc%",
          "scope": "window"
        },
        "python.analysis.typeshedPaths": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Paths to look for typeshed modules.",
          "scope": "resource"
        },
        "python.analysis.autoSearchPaths": {
          "type": "boolean",
          "default": true,
          "description": "Automatically add common search paths like 'src'?",
          "scope": "resource"
        },
        "python.pythonPath": {
          "type": "string",
          "default": "python",
          "description": "Path to Python, you can use a custom version of Python.",
          "scope": "resource"
        },
        "python.venvPath": {
          "type": "string",
          "default": "",
          "description": "Path to folder with a list of Virtual Environments.",
          "scope": "resource"
        },
        "pyright.disableLanguageServices": {
          "type": "boolean",
          "default": false,
          "description": "Disables type completion, definitions, and references.",
          "scope": "resource"
        },
        "pyright.disableOrganizeImports": {
          "type": "boolean",
          "default": false,
          "description": "Disables the “Organize Imports” command.",
          "scope": "resource"
        },
        "pyright.openFilesOnly": {
          "type": "boolean",
          "default": true,
          "description": "Report errors only for currently-open files.",
          "scope": "resource"
        },
        "pyright.useLibraryCodeForTypes": {
          "type": "boolean",
          "default": false,
          "description": "Use library implementations to extract type information when type stub is not present.",
          "scope": "resource"
        },
        "pyright.typeCheckingMode": {
          "type": "string",
          "default": "basic",
          "enum": [
            "off",
            "basic",
            "strict"
          ],
          "description": "Defines the default rule set for type checking.",
          "scope": "resource"
        },
        "codelens-sample.enableCodeLens": {
          "type": "boolean",
          "default": true
        },
        "multiRootSample.statusColor": {
          "type": [
            "string"
          ],
          "default": "#FFFFFF",
          "description": "Color to use for the status bar item. Can be set per workspace folder.",
          "scope": "resource"
        },
        "langServer.maxProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Max problems by server."
        },
        "langServer.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Communication between VS Code and server."
        },
        "lspMultiServerSample.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Controls the enablement."
        },
        "lspMultiServerSample.options": {
          "scope": "resource",
          "type": "object",
          "default": {},
          "description": "Additional options."
        },
        "lspMultiServerSample.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VSCode and the language server."
        }
      }
    },
    "configurationDefaults": {
      "[markdown]": {
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false
      }
    },
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "./schemas/package.schema.json"
      }
    ],
    "markdown.previewScripts": [
      "./media/index.js"
    ],
    "customEditors": [
      {
        "viewType": "vscode.markdown.preview.editor",
        "displayName": "Markdown Preview (Experimental)",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "*.md"
          }
        ]
      }
    ]
  },
  "bin": {
    "proba": "index.js"
  },
  "scripts": {
    "webpack:dev": "npm run clean && yarn run compile && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js",
    "webpack": "yarn run clean && yarn run compile && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
    "clean": "rimraf client/out && rimraf server/out",
    "compile": "tsc -b",
    "lint": "eslint -p ./",
    "postinstall": "cd client && yarn install && cd ../server && yarn install && cd ..",
    "pretest": "yarn run compile",
    "test": "sh ./scripts/e2e.sh",
    "vscode:prepublish": "yarn run webpack",
    "watch": "tsc -b -w",
    "install:all": "npm install && cd server && npm install && cd ../client && npm install && cd ..",
    "build": "tsc -p ./",
    "build:client": "cd client && npm run build && cd ..",
    "build:clientServerDebug": "npm run build:serverDebug && npm run build:client",
    "build:serverProd": "cd server && npm run build:serverProd && cd ..",
    "build:serverDebug": "cd server && npm run build:serverDebug && cd ..",
    "build:cli": "cd server && npm run build:cli && cd ..",
    "package": "npm run install:all && npm run clean && npm run build:serverProd && npm run build:cli && cd client && npx vsce package && cd ..",
    "qupdate-vscode": "node ./node_modules/vscode/bin/install",
    "qpostinstall": "node ./node_modules/vscode/bin/install",
    "update-grammar": "node ./build/update-grammar.js",
    "update-grammar2": "node ../../build/npm/update-grammar.js octref/language-css grammars/css.cson ./syntaxes/css.tmLanguage.json",
    "update-grammar3": "node ../../build/npm/update-grammar.js microsoft/vscode-markdown-tm-grammar syntaxes/markdown.tmLanguage ./syntaxes/markdown.tmLanguage.json",
		"build-ext": "node ../../node_modules/gulp/bin/gulp.js --gulpfile ../../build/gulpfile.extensions.js compile-extension:markdown-language-features ./tsconfig.json",
		"build-preview": "webpack --mode production"
  },
  "dependencies": {
		"markdown-it-front-matter": "",
		"markdown-it": "",
    "highlight.js": "",
    "vscode-extension-telemetry": "",
    "vscode-nls": ""
  },
  "devDependencies": {
    "@types/command-line-args": "",
    "@types/fs-extra": "",
    "@types/glob": "",
    "@types/mocha": "",
    "@types/vscode": "",
    "fs-extra": "",
    "glob": "",
    "merge-options": "",
    "mocha": "",
    "rimraf": "",
    "source-map-support": "",
    "ts-loader": "",
    "vsce": "",
    "vscode-test": "",
    "@types/highlight.js": "",
		"@types/markdown-it": ""
  }
}
