{
  "name": "proba",
  "displayName": "Proba",
  "description": "Proba...",
  "author": "Qpx",
  "license": "MIT",
  "version": "0.0.1",
  "publisher": "qpx",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-extension-samples"
  },
  "keywords": [
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.45.0"
  },
  "categories": [
    "Programming Languages",
    "Themes",
    "Other"
  ],
  "activationEvents": [
    "*",
    "onLanguage:semanticLanguage",
    "onCommand:extension.proba",
    "onLanguage:plaintext",
    "onLanguage:html1"
  ],
  "main": "./out/client/extension",
  "contributes": {
    "themes": [
      {
        "label": "Proba Light",
        "uiTheme": "vs",
        "path": "./Proba_Light.tmTheme"
      },
      {
        "label": "Proba Dark",
        "uiTheme": "vs-dark",
        "path": "./Proba_Dark.tmTheme"
      }
    ],
    "languages": [
      {
        "id": "javascript",
        "extensions": [
          ".js"
        ],
        "aliases": [
          "js",
          "JavaScript"
        ],
        "configuration": "./js-configuration.json"
      },
      {
        "id": "html1",
        "extensions": [
          ".html1"
        ]
      },
      {
        "id": "semanticLanguage",
        "extensions": [
          ".semanticLanguage"
        ]
      }
    ],
    "grammars": [
      {
        "language": "html1",
        "scopeName": "text.html1.basic",
        "path": "./syntaxes/html1.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "extension.proba",
        "title": "Proba :-)"
      },
      {
        "title": "Enable CodeLens",
        "command": "codelens-sample.enableCodeLens",
        "category": "CodeLens Sample"
      },
      {
        "title": "Disable Codelens",
        "command": "codelens-sample.disableCodeLens",
        "category": "CodeLens Sample"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Proba config",
      "properties": {
        "codelens-sample.enableCodeLens": {
          "type": "boolean",
          "default": true
        },
        "multiRootSample.statusColor": {
          "type": [
            "string"
          ],
          "default": "#FFFFFF",
          "description": "Color to use for the status bar item. Can be set per workspace folder.",
          "scope": "resource"
        },
        "langServer.maxProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Max problems by server."
        },
        "langServer.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Communication between VS Code and server."
        },
        "lspMultiServerSample.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Controls the enablement."
        },
        "lspMultiServerSample.options": {
          "scope": "resource",
          "type": "object",
          "default": {},
          "description": "Additional options."
        },
        "lspMultiServerSample.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VSCode and the language server."
        }
      }
    }
  },
  "scripts": {
    "webpack:dev": "npm run clean && yarn run compile && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js",
    "webpack": "yarn run clean && yarn run compile && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
    "clean": "rimraf client/out && rimraf server/out",
    "compile": "tsc -b",
    "lint": "eslint -p ./",
    "postinstall": "cd client && yarn install && cd ../server && yarn install && cd ..",
    "pretest": "yarn run compile",
    "test": "sh ./scripts/e2e.sh",
    "vscode:prepublish": "yarn run webpack",
    "watch": "tsc -b -w"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/command-line-args": "",
    "@types/fs-extra": "",
    "@types/glob": "",
    "@types/mocha": "",
    "@types/vscode": "",
    "fs-extra": "",
    "glob": "",
    "merge-options": "",
    "mocha": "",
    "rimraf": "",
    "source-map-support": "",
    "ts-loader": "",
    "vsce": "",
    "vscode-jsonrpc": "",
    "vscode-test": "",
    "vscode-uri": ""
  }
}
